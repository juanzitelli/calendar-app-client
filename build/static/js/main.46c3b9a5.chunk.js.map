{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.jsx","helpers/prepareEvents.js","actions/events.js","actions/ui.js","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","components/calendar/CalendarModal.jsx","components/calendar/CalendarScreen.jsx","router/PrivateRoute.jsx","router/PublicRoute.jsx","router/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","uiOpenModal","uiCloseModal","eventAddNew","eventStartAddNew","eventStartUpdating","eventUpdated","eventDeleted","eventLogout","eventSetActive","eventClearActiveEvent","eventsLoaded","authChecking","authCheckingFinished","authStartLogin","authLogin","authLogout","authStartRegister","authRegister","authStartTokenRenew","initialState","events","activeEvent","modalOpen","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","eventUpdate","map","e","id","filter","auth","require","createStore","applyMiddleware","compose","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunk","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","user","checkingFinished","logout","useForm","useState","formState","setFormState","resetForm","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","event","email","password","preventDefault","a","respuesta","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","end","moment","toDate","start","uiOpenModalAction","AddNewFab","onClick","DeleteEventFab","getState","resp","console","error","Navbar","useSelector","clear","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","second","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","closeModal","useEffect","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","startEventUpdate","evento","_id","startEventAddNew","selectedDate","minDate","autoComplete","rows","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","userId","response","eventos","startAccessor","endAccessor","eventPropGetter","backgroundColor","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","clickedView","view","selectable","onSelectSlot","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46c3b9a5.chunk.js","sourcesContent":["export const types = {\n  // UI Modal action types\n  uiOpenModal: \"[UI] Open modal\",\n  uiCloseModal: \"[UI] Close modal\",\n\n  // Events CRUD action types\n  eventAddNew: \"[Events] Add new event\",\n  eventStartAddNew: \"[Events] Start add new event\",\n  eventStartUpdating: \"[Events] Start event update\",\n  eventUpdated: \"[Events] Event updated\",\n  eventDeleted: \"[Events] Event deleted\",\n  eventLogout: \"[Events] Event logout\",\n\n  // Active event action types\n  eventSetActive: \"[Events] Set active\",\n  eventClearActiveEvent: \"[Events] Clear active event\",\n\n  // Load events\n  eventsLoaded: \"[Events] Events loaded\",\n  // eventsLoaded: \"[Events] Events loaded\",\n\n  // Auth login action types\n  authChecking: \"[Auth] Checking login state\",\n  authCheckingFinished: \"[Auth] Finished checking login state\",\n  authStartLogin: \"[Auth] Start login\",\n  authLogin: \"[Auth] Login\",\n\n  // Auth logout action types\n  authLogout: \"[Auth] Start logout\",\n\n  // Auth register action types\n  authStartRegister: \"[Auth] Start register\",\n  authRegister: \"[Auth] Register\",\n\n  // Auth renew token action types\n  authStartTokenRenew: \"[Auth] Start token renewal\",\n};\n","import { types } from \"../types/types\";\n\n/**\n * \n * EVENT STRUCTURE\n * {\n      id: new Date().getTime(),\n      title: \"Cumpleaños de Juan :D\",\n      start: moment().toDate(),\n      end: moment().add(2, \"hours\").toDate(),\n      notes: \"Comprar la pizza\",\n      user: {\n        _id: \"123\",\n        name: \"Juan\",\n      },\n    },\n */\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n    case types.eventUpdate:\n      return {\n        ...state,\n        events: state.events.map(e =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter(e => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n\n    case types.eventsLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n    case types.eventLogout:\n      return { ...initialState };\n    default:\n      return state;\n  }\n};\n","import { types } from \"./../types/types\";\nconst initialState = {\n\tmodalOpen: false,\n};\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n\t\t  ...state,\n\t\t  modalOpen: true,\n\t  };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"./../types/types\";\nconst initialState = {\n  checking: true,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n    case types.authCheckingFinished:\n      return {\n        ...state,\n        checking: false,\n      };\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\nimport { authReducer } from \"./authReducer\";\n\nexport const rootReducer = combineReducers({\n\tui: uiReducer,\n\tcalendar: calendarReducer,\n\tauth: authReducer\n})","import thunk from \"redux-thunk\";\nimport { rootReducer } from \"./../reducers/rootReducer\";\nconst { createStore, applyMiddleware, compose } = require(\"redux\");\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","const baseURL = process.env.REACT_APP_API_URL;\nexport const fetchSinToken = (endpoint, data, method = \"GET\") => {\n  const url = `${baseURL}/${endpoint}`;\n\n  if (method === \"GET\") {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport const fetchConToken = (endpoint, data, method = \"GET\") => {\n  const url = `${baseURL}/${endpoint}`;\n  const token = localStorage.getItem(\"x-token\") || \"\";\n  \n  if (method === \"GET\") {\n    return fetch(url, {\n      method,\n      headers: {\n        \"x-token\": token,\n      },\n    });\n  } else {\n    \n    return fetch(url, {\n      method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-token\": token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const startLogin = (email, password) => async dispatch => {\n  const respuesta = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n  const body = await respuesta.json();\n  if (body.ok) {\n    localStorage.setItem(\"x-token\", body.token);\n    localStorage.setItem(\"token-init-date\", new Date().getTime());\n    dispatch(login({ uid: body.uid, name: body.name }));\n  } else {\n    Swal.fire(\"Error\", body.msg, \"error\");\n  }\n};\n\nexport const login = user => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startRegister = (email, password, name) => async dispatch => {\n  const respuesta = await fetchSinToken(\n    \"auth/new\",\n    { email, password, name },\n    \"POST\"\n  );\n  const body = await respuesta.json();\n  if (body.ok) {\n    localStorage.setItem(\"x-token\", body.token);\n    localStorage.setItem(\"token-init-date\", new Date().getTime());\n    dispatch(login({ uid: body.uid, name: body.name }));\n  } else {\n    Swal.fire(\"Error\", body.msg, \"error\");\n  }\n};\n\nexport const startChecking = () => async dispatch => {\n  const respuesta = await fetchConToken(\"auth/renew\");\n  const body = await respuesta.json();\n  if (body.ok) {\n    localStorage.setItem(\"x-token\", body.token);\n    localStorage.setItem(\"token-init-date\", new Date().getTime());\n    dispatch(login({ uid: body.uid, name: body.name }));\n  } else {\n    dispatch(checkingFinished());\n  }\n};\n\nconst checkingFinished = () => ({\n  type: types.authCheckingFinished,\n});\n\nexport const startLogout = () => async dispatch => {\n  localStorage.clear();\n  dispatch(logout());\n};\n\nexport const logout = () => ({\n  type: types.authLogout,\n});\n","import { useState } from \"react\";\n\nconst useForm = (initialState = {}) => {\n  const [formState, setFormState] = useState(initialState);\n\n    \n  const resetForm = () => {\n    setFormState(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setFormState({\n      ...formState,\n      [target.name]: target.value,\n    });\n  };\n  return [formState, handleInputChange, resetForm];\n};\n\nexport default useForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport useForm from '../../hooks/useForm';\nimport './login-screen.css';\n\nexport const LoginScreen = () => {\n\n\tconst dispatch = useDispatch();\n\n\n\tconst [formLoginValues, handleLoginInputChange] = useForm({\n\t\tloginEmail: '',\n\t\tloginPassword: '',\n\t});\n\n\tconst { loginEmail, loginPassword } = formLoginValues;\n\n\tconst handleLogin = (event) => {\n\t\tevent.preventDefault();\n\t\tdispatch(startLogin(loginEmail, loginPassword))\n\t}\n\n\n\n\tconst [formRegisterValues, handleRegisterInputChange] = useForm({\n\t\tregisterName: '',\n\t\tregisterEmail: '',\n\t\tregisterPassword1: '',\n\t\tregisterPassword2: '',\n\t});\n\tconst { registerName,\n\t\tregisterEmail,\n\t\tregisterPassword1,\n\t\tregisterPassword2, } = formRegisterValues\n\n\n\tconst handleRegister = (event) => {\n\t\tevent.preventDefault();\n\t\tif (registerPassword1 !== registerPassword2) {\n\t\t\treturn Swal.fire('Error', 'Passwords should match', 'error')\n\t\t}\n\t\t\n\t\tdispatch(startRegister(registerEmail, registerPassword1, registerName,))\n\t}\n\n\treturn (\n\n\t\t<div className=\"container login-container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-6 login-form-1\">\n\t\t\t\t\t<h3>Sign In</h3>\n\t\t\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tname=\"loginEmail\"\n\t\t\t\t\t\t\t\tvalue={loginEmail}\n\t\t\t\t\t\t\t\tonChange={handleLoginInputChange}\n\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\tname=\"loginPassword\"\n\t\t\t\t\t\t\t\tvalue={loginPassword}\n\t\t\t\t\t\t\t\tonChange={handleLoginInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"btnSubmit\"\n\t\t\t\t\t\t\t\tvalue=\"Login\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-md-6 login-form-2\">\n\t\t\t\t\t<h3>Register</h3>\n\t\t\t\t\t<form onSubmit={handleRegister}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t\tname=\"registerName\"\n\t\t\t\t\t\t\t\tvalue={registerName}\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tname=\"registerEmail\"\n\t\t\t\t\t\t\t\tvalue={registerEmail}\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\t\n\t\t\t\t\t\t\t\tname=\"registerPassword1\"\n\t\t\t\t\t\t\t\tvalue={registerPassword1}\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Repeat your password\"\n\t\t\t\t\t\t\t\tname=\"registerPassword2\"\n\t\t\t\t\t\t\t\tvalue={registerPassword2}\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"btnSubmit\"\n\t\t\t\t\t\t\t\tvalue=\"Create account\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import moment from \"moment\";\nexport const prepareEvents = (events = []) => {\n  return events.map(event => ({\n    ...event,\n    end: moment(event.end).toDate(),\n    start: moment(event.start).toDate(),\n  }));\n};\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const startEventAddNew = event => async (dispatch, getState) => {\n  const { uid, name } = getState().auth;\n  try {\n    const resp = await fetchConToken(\"events\", event, \"POST\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      event.id = body.evento.id;\n      event.user = {\n        _id: uid,\n        name,\n      };\n      dispatch(eventAddNew(event));\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n});\n\nexport const startEventUpdate = event => async dispatch => {\n  try {\n    const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\n    const body = await resp.json();\n    if (body.ok) {\n      dispatch(eventUpdated(event));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const startEventDelete = () => async (dispatch, getState) => {\n  const { id } = getState().calendar.activeEvent;\n  try {\n    const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n    const body = await resp.json();\n    if (body.ok) {\n      dispatch(eventDeleted());\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventsStartLoading = () => async dispatch => {\n  try {\n    const response = await fetchConToken(\"events\");\n    const { eventos } = await response.json();\n    \n    dispatch(eventsLoaded(prepareEvents(eventos)));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst eventsLoaded = events => ({\n  type: types.eventsLoaded,\n  payload: events,\n});\n\nexport const eventsLogout = () => ({\n  type: types.eventLogout,\n})\n","import { types } from \"../types/types\";\n\nexport const uiOpenModalAction = () => ({\n\ttype: types.uiOpenModal\n})\n\nexport const uiCloseModalAction = () => ({\n  type: types.uiCloseModal,\n});","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModalAction } from '../../actions/ui'\n\nexport const AddNewFab = () => {\n\tconst dispatch = useDispatch()\n\tconst onClickEventHandler = () => {\n\t\tdispatch(uiOpenModalAction());\n\t}\n\treturn (\n\t\t<button className=\"btn btn-primary fab\" onClick={onClickEventHandler}>\n\t\t\t<i className=\"fas fa-plus\"></i>\n\t\t</button>\n\t)\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { startEventDelete } from '../../actions/events'\n\nexport const DeleteEventFab = () => {\n\tconst dispatch = useDispatch()\n\tconst handleDelete = () => {\n\t\tdispatch(startEventDelete())\n\t}\n\treturn (\n\t\t<button className=\"btn btn-danger fab-danger\"\n\t\t\tonClick={handleDelete}>\n\t\t\t<i className=\"fas fa-trash\"></i>\n\t\t\t<span> Delete event</span>\n\t\t</button>\n\t)\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { eventsLogout } from '../../actions/events';\n\nexport const Navbar = () => {\n\tconst { name } = useSelector(state => state.auth)\n\tconst dispatch = useDispatch();\n\tconst handleLogout = () => {\n\t\tdispatch(startLogout())\n\t\tdispatch(eventsLogout());\n\t}\n\treturn (\n\t\t<div className=\"navbar navbar-dark bg-dark\">\n\t\t\t<span className=\"navbar-brand\">\n\t\t\t\t{name}'s calendar 📅\n\t\t\t</span>\n\t\t\t<button className=\"btn btn-outline-danger\">\n\n\t\t\t\t<span onClick={handleLogout}><i className=\"fas fa-sign-out-alt\"></i> Exit</span>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\tconst { title, user } = event;\n\n\treturn (\n\t\t<div>\n\t\t\t<span>{title} <strong>- {user.name}</strong></span>\n\t\t</div>\n\t)\n}\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { eventClearActiveEvent, startEventAddNew, startEventUpdate } from '../../actions/events';\nimport { uiCloseModalAction } from '../../actions/ui';\n\nconst customStyles = {\n\tcontent: {\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\tright: 'auto',\n\t\tbottom: 'auto',\n\t\tmarginRight: '-50%',\n\t\ttransform: 'translate(-50%, -50%)'\n\n\t}\n};\n\nprocess.env.NODE_ENV !== 'test' && Modal.setAppElement('#root')\n\n\nconst now = moment().minutes(0).second(0).add(1, 'hours');\nconst nowPlusOneHour = now.clone().add(1, 'hours')\n\n\nconst initEvent = {\n\ttitle: \"\",\n\tnotes: \"\",\n\tstart: now.toDate(),\n\tend: nowPlusOneHour.toDate(),\n}\n\n\nexport const CalendarModal = () => {\n\n\tconst [dateStart, setDateStart] = useState(now.toDate())\n\tconst [dateEnd, setDateEnd] = useState(nowPlusOneHour.toDate())\n\tconst [titleValid, setTitleValid] = useState(true)\n\tconst [formValues, setFormValues] = useState(initEvent)\n\n\n\tconst dispatch = useDispatch();\n\tconst { modalOpen } = useSelector(state => state.ui)\n\tconst { activeEvent } = useSelector(state => state.calendar)\n\n\tconst { notes, title, start, end } = formValues\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetFormValues({\n\t\t\t...formValues,\n\t\t\t[target.name]: target.value\n\t\t})\n\t}\n\n\tconst closeModal = () => {\n\t\tdispatch(uiCloseModalAction())\n\t\tdispatch(eventClearActiveEvent())\n\t\tsetFormValues(initEvent)\n\t}\n\n\tconst handleStartDateChange = selectedDate => {\n\t\tsetDateStart(selectedDate);\n\t\tsetFormValues({\n\t\t\t...formValues,\n\t\t\tstart: selectedDate\n\t\t})\n\t}\n\tconst handleEndDateChange = selectedDate => {\n\t\tsetDateEnd(selectedDate);\n\t\tsetFormValues({\n\t\t\t...formValues,\n\t\t\tend: selectedDate\n\t\t})\n\t}\n\tconst handleFormSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst momentStart = moment(start)\n\t\tconst momentEnd = moment(end)\n\t\tif (momentStart.isSameOrAfter(momentEnd)) {\n\t\t\treturn Swal.fire(\"Error\", \"End date shouldn't be lower than start date\", \"error\");\n\t\t}\n\t\tif (title.trim().length < 2) {\n\t\t\treturn setTitleValid(false)\n\t\t}\n\t\tsetTitleValid(true);\n\t\tif (activeEvent) {\n\t\t\tdispatch(startEventUpdate(formValues))\n\t\t}\n\t\telse {\n\t\t\tdispatch(startEventAddNew(formValues))\n\t\t}\n\t\tcloseModal();\n\n\t}\n\n\tuseEffect(() => {\n\t\tif (activeEvent) {\n\t\t\tsetFormValues(activeEvent);\n\t\t}\n\t\telse {\n\t\t\tsetFormValues(initEvent);\n\t\t}\n\t}, [activeEvent])\n\n\treturn (\n\t\t<Modal\n\t\t\tisOpen={modalOpen}\n\t\t\t// onAfterOpen={afterOpenModal}\n\t\t\tonRequestClose={closeModal}\n\t\t\tcloseTimeoutMS={300}\n\t\t\tstyle={customStyles}\n\t\t\tclassName='modal'\n\t\t\toverlayClassName='modal-fondo'\n\t\t\tariaHideApp={!process.env.NODE_ENV === 'test'}\n\n\t\t>\n\t\t\t<h1> {activeEvent ? 'Edit event' : \"New event\"} </h1>\n\t\t\t<hr />\n\t\t\t<form className=\"container\"\n\t\t\t\tonSubmit={handleFormSubmit}\n\t\t\t>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label>Start date and time</label>\n\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\tonChange={handleStartDateChange}\n\t\t\t\t\t\tvalue={dateStart}\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tname=\"start\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label>End date and time</label>\n\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\tonChange={handleEndDateChange}\n\t\t\t\t\t\tvalue={dateEnd}\n\t\t\t\t\t\tminDate={dateStart}\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tname=\"end\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label>Title and notes</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName={`form-control ${!titleValid && 'is-invalid'}`}\n\t\t\t\t\t\tplaceholder=\"Event's title\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">A short description</small>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Notes\"\n\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\tname=\"notes\"\n\t\t\t\t\t\tvalue={notes}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Additional information</small>\n\t\t\t\t</div>\n\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"btn btn-outline-primary btn-block\"\n\t\t\t\t>\n\t\t\t\t\t<i className=\"far fa-save\"></i>\n\t\t\t\t\t<span> Save</span>\n\t\t\t\t</button>\n\n\t\t\t</form>\n\t\t</Modal>\n\t)\n}\n\n\n","import moment from 'moment'\nimport 'moment/locale/es'\nimport React, { useEffect, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { eventClearActiveEvent, eventSetActive, eventsStartLoading } from '../../actions/events'\nimport { uiOpenModalAction } from '../../actions/ui'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\nimport { Navbar } from '../ui/Navbar'\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\n\n\nmoment.locale('en');\nconst localizer = momentLocalizer(moment)\n\nexport const CalendarScreen = () => {\n\n\tconst dispatch = useDispatch();\n\n\tconst { events, activeEvent } = useSelector(state => state.calendar)\n\n\tconst [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\n\n\tconst { uid: userId } = useSelector(state => state.auth)\n\n\tconst onDoubleClickEventHandler = (e) => {\n\t\tdispatch(uiOpenModalAction())\n\t}\n\tconst onSelectEventHandler = (e) => {\n\t\tdispatch(eventSetActive(e))\n\t}\n\n\tconst onViewChangeEventHandler = (clickedView) => {\n\t\tsetlastView(clickedView)\n\t\tlocalStorage.setItem('lastView', clickedView)\n\t}\n\n\tconst eventStyleGetter = (event) => {\n\n\t\tconst style = {\n\t\t\tbackgroundColor: (event.user._id === userId) ? \"#367cf7\" : \"#465660\",\n\t\t\topacity: 0.8,\n\t\t\tdisplay: 'block',\n\t\t\tcolor: 'white',\n\t\t}\n\t\treturn { style }\n\t}\n\tconst onSelectSlot = () => {\n\t\tdispatch(eventClearActiveEvent())\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(eventsStartLoading())\n\t}, [dispatch])\n\n\treturn (\n\t\t<div className=\"calendar-screen\">\n\t\t\t<Navbar />\n\t\t\t<Calendar\n\t\t\t\tlocalizer={localizer}\n\t\t\t\tevents={events}\n\t\t\t\tstartAccessor=\"start\"\n\t\t\t\tendAccessor=\"end\"\n\t\t\t\teventPropGetter={eventStyleGetter}\n\t\t\t\tcomponents={{ event: CalendarEvent }}\n\t\t\t\tonDoubleClickEvent={onDoubleClickEventHandler}\n\t\t\t\tonSelectEvent={onSelectEventHandler}\n\t\t\t\tonView={onViewChangeEventHandler}\n\t\t\t\tview={lastView}\n\t\t\t\tselectable={true}\n\t\t\t\tonSelectSlot={onSelectSlot}\n\t\t\t/>\n\n\t\t\t<AddNewFab />\n\t\t\t{activeEvent && <DeleteEventFab />}\n\n\n\t\t\t<CalendarModal />\n\n\t\t</div>\n\t)\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n\n\treturn (\n\t\t<Route {...rest} component={(props) => (\n\t\t\tisAuthenticated ? <Component  {...props} /> : (<Redirect to=\"/login\" />)\n\t\t)\n\n\t\t} />\n\t)\n}\nPrivateRoute.propTypes = {\n\tisAuthenticated: PropTypes.bool.isRequired,\n\tcomponent: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\t\n\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n\treturn (\n\t\t<Route {...rest} component={(props) => (\n\t\t\tisAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n\t\t)\n\n\t\t} />\n\t)\n}\nPublicRoute.propTypes = {\n\tisAuthenticated: PropTypes.bool.isRequired,\n\tcomponent: PropTypes.func.isRequired\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch, Redirect\n} from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n\tconst dispatch = useDispatch();\n\tconst { checking, uid } = useSelector(state => state.auth)\n\tuseEffect(() => {\n\t\tdispatch(startChecking())\n\t}, [dispatch])\n\tif (checking) {\n\t\treturn <h5>Loading...</h5>\n\t}\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<PublicRoute isAuthenticated={!!uid} exact path=\"/login\" component={LoginScreen} />\n\t\t\t\t\t<PrivateRoute isAuthenticated={!!uid} exact path=\"/\" component={CalendarScreen} />\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t)\n\n\n}\n","import React from 'react'\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n\treturn (\n\n\t\t<Provider store={store}>\n\t\t\t<AppRouter />\n\t\t</Provider>\n\n\t)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}